---
- hosts: all

  become: yes
  become_method: sudo
  become_user: lab-user

  vars:
    LABS_CONTENT_PART: "2019Labs/CustomSecurityContent/documentation"
    TRACK_1_LABEL: "lab1_introduction"
    TRACK_2_LABEL: "lab2_openscap"
    TRACK_3_LABEL: "lab3_profiles"
    TRACK_4_LABEL: "lab4_ansible"
    TRACK_5_LABEL: "lab5_oval"
    CACC_LOCAL: "/tmp/complianceAsCode"
    LABS_ROOT: "/home/lab-user/labs"

  tasks:
  - name: Clone the CaC/c Git repository
    git:
      repo: 'https://github.com/ComplianceAsCode/content.git'
      dest: "{{ CACC_LOCAL }}"

  - name: Remove the Labs directory, so we start from scratch.
    file:
      path: "{{ LABS_ROOT }}"
      state: absent

  - name: Generate SSH keys
    shell: ssh-keygen -b 2048 -t rsa -f /home/lab-user/.ssh/id_rsa -q -N ""
    args:
      creates: /home/lab-user/.ssh/id_rsa

  - name: Set root's .ssh directory permission
    file:
      state: directory
      mode: "700"
      path: /root/.ssh
    become_user: root

  - name: Copy the RSA key pair to the root user
    copy:
      src: /home/lab-user/.ssh/{{ item }}
      remote_src: yes
      dest: /root/.ssh/
      mode: "600"
    loop:
     - id_rsa
     - id_rsa.pub
    become_user: root

  - name: Build a podman image for testing
# TODO: The RHEL image doesn't work with subscription, even if the host is subscribed.
# TODO: Building as the root user, as port binding requires root privileges, may not be the case for RHEL8 GA podman.
    shell: 'podman build --build-arg "CLIENT_PUBLIC_KEY=$(cat /root/.ssh/id_rsa.pub)" -t ssg_test_suite -f test_suite-rhel   .'
#   shell: 'podman build --build-arg "CLIENT_PUBLIC_KEY=$(cat /root/.ssh/id_rsa.pub)" -t ssg_test_suite -f test_suite-fedora .'
    args:
      chdir: "{{ CACC_LOCAL }}/Dockerfiles"
    when: ansible_distribution == 'RedHat' and ansible_distribution_version.split(".")[0] == "8"
    become_user: root

  - name: Remove the lab3 tests
    file:
      path: "{{ LABS_ROOT }}/{{ TRACK_5_LABEL }}/content/tests/data/group_system/group_accounts/group_accounts-session/"
      state: absent

  - name: Creates directories for Lab Tracks
    file:
      path: "{{ LABS_ROOT }}/{{ item }}"
      state: directory
    loop:
      - "{{ TRACK_1_LABEL }}"
      - "{{ TRACK_2_LABEL }}"
      - "{{ TRACK_3_LABEL }}"
      - "{{ TRACK_4_LABEL }}"
      - "{{ TRACK_5_LABEL }}"

  - name: Clone the CaC/c Git for Lab Tracks
    git:
      repo: "{{ CACC_LOCAL }}"
      version: 'v0.1.45'
      dest: "{{ LABS_ROOT }}/{{ item }}"
      force: yes
    loop:
      - "{{ TRACK_1_LABEL }}"
      - "{{ TRACK_2_LABEL }}"
      - "{{ TRACK_3_LABEL }}"
      - "{{ TRACK_4_LABEL }}"
      - "{{ TRACK_5_LABEL }}"

  - name: Copy the track + documentation to the working directory
    copy:
      src: "{{ LABS_LOCAL }}/{{ LABS_CONTENT_PART }}/{{ TRACK_1_LABEL }}"
      dest: "{{ LABS_ROOT }}/{{ TRACK_1_LABEL }}/documentation"
      remote_src: yes
    when: False

  - name: "Ex. 1: Introduce a typo 1/2"
    replace:
      dest: "{{ LABS_ROOT }}/{{ TRACK_1_LABEL }}/linux_os/guide/system/accounts/accounts-pam/password_quality/password_quality_pwquality/accounts_password_pam_minlen/rule.yml"
      regexp: '(    after pam_pwquality to set minimum password length requirements.)'
      replace: '\1\n\1'

  - name: "Ex. 1: Introduce a typo 2/2"
    replace:
      dest: "{{ LABS_ROOT }}/{{ TRACK_1_LABEL }}/linux_os/guide/system/accounts/accounts-session/accounts_tmout/rule.yml"
      regexp: '(    Setting the <tt>TMOUT</tt> option in <tt>/etc/profile</tt> ensures that)'
      replace: '\1\n\1'

  - name: "Ex. 3: Remove tests"
    file:
      path: "{{ LABS_ROOT }}/{{ TRACK_5_LABEL }}/tests/data/group_system/group_accounts/group_accounts-session/"
      state: absent

  - name: "Ex. 3: Copy bad tests"
    copy:
      src: "data/rule_accounts_tmout"
      dest: "{{ LABS_ROOT }}/{{ TRACK_5_LABEL }}/tests/data/group_system/group_accounts/group_accounts-session/"

  - name: "Ex. 4: Remove the Ansible content from rule accounts_tmout so that the attendees can create them themselves"
    file:
      path: "{{ LABS_ROOT }}/{{ TRACK_4_LABEL }}/linux_os/guide/system/accounts/accounts-session/accounts_tmout/ansible/"
      state: absent

  - name: "Ex. 5: Bust the OVAL"
    replace:
      dest: "{{ LABS_ROOT }}/{{ TRACK_5_LABEL }}/linux_os/guide/system/accounts/accounts-session/accounts_tmout/oval/shared.xml"
      regexp: '(operation=")greater than or equal(")'
      replace: '\1equals\2'

  - name: "Copy our OSPP profile to the target system"
    copy:
      src: "data/ospp.profile"
      dest: "{{ LABS_ROOT }}/{{ item }}/rhel8/profiles/"
    loop:
      - "{{ TRACK_1_LABEL }}"
      - "{{ TRACK_2_LABEL }}"
      - "{{ TRACK_3_LABEL }}"
      - "{{ TRACK_4_LABEL }}"
      - "{{ TRACK_5_LABEL }}"

  - name: Build the RHEL8 content to be used in exercises
    command: "./build_product rhel8"
    args:
      chdir: "{{ LABS_ROOT }}/{{ item }}"
    loop:
      - "{{ TRACK_1_LABEL }}"
      - "{{ TRACK_2_LABEL }}"
#     - "{{ TRACK_3_LABEL }}"  # This exercise creates new profile before doing anything, so there is no need to build it in advance.
#     - "{{ TRACK_4_LABEL }}"  # This exercise creates new Ansible content before doing anything, so there is no need to build it in advance.

  - name: Build the RHEL7 content to be used in the container scanning exercise
    command: "./build_product rhel7"
    args:
      chdir: "{{ LABS_ROOT }}/{{ item }}"
    loop:
      - "{{ TRACK_5_LABEL }}"
